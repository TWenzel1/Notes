1.	Make a 2.1 API project
2.	Add Models folder
3.	Nuget adds may need sqlexpress instead.
4.	 
3.1 requires Microsoft.EntityFrameworkCore.Design 3.1.1



5.	Add new Todo class in Models folder
namespace TodoApi.Models
{
    public class TodoItem
    {
        public long Id { get; set; }
        public string Name { get; set; }
        public bool IsComplete { get; set; }
    }
}
6.	Add new TodoContext class in Models folder
using Microsoft.EntityFrameworkCore;

namespace TodoApi.Models
{
    public class TodoContext : DbContext
    {
        public TodoContext(DbContextOptions<TodoContext> options)
            : base(options)
        {
        }

        public DbSet<TodoItem> TodoItems { get; set; }
    }
}

7.	Add Microsoft.EntitiyFrameworkCore and Microsoft.EntityFrameworkCore.SqlLite or Microsoft.EntityFrameworkCore.SqlServer
8.	Add Configurations for Database
using Microsoft.EntityFrameworkCore;
  using TodoApi.Models;
public void ConfigureServices(IServiceCollection services)
        {
•	services.AddDbContext<TodoContext>(opt =>
                opt.UseInMemoryDatabase("TodoList"));

•	services.AddDbContext<FlightAndHotel>(options =>
                options.UseSqlite("Data Source=FlightHotel.db"));

•	services.AddDbContext<PaymentDetailContext>(options =>
            options.UseSqlServer(Configuration.GetConnectionString("DevConnection")));



Connection string for server

  "ConnectionStrings": {
    "DevConnection" : "Server=(localdb)\\mssqllocaldb; Database=aspnet-PaymentDetailDB;Trusted_Connection=True;MultipleActiveResultSets=True;"
  }

        }

9.	Add-Migration “initial”
10.	Update-Database
11.	Create a controller in the controller file
12.	Test get, get/1, post, put, delete.
13.	Code for Database first
Scaffold-DbContext "Server=(localdb)\\mssqllocaldb; Database=aspnet-FlightAndHotel;Trusted_Connection=True;" Microsoft.EntityFrameworkCore.SqlServer -OutputDir Models

